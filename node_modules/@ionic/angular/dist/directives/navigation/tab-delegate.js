import { ComponentFactoryResolver, Directive, ElementRef, HostListener, Injector } from '@angular/core';
import { AngularDelegate } from '../../providers/angular-delegate';
export class TabDelegate {
    constructor(elementRef, cfr, injector, angularDelegate) {
        this.elementRef = elementRef;
        elementRef.nativeElement.delegate = angularDelegate.create(cfr, injector);
    }
    async onNavChanged() {
        const tab = this.elementRef.nativeElement;
        await tab.componentOnReady();
        const tabs = tab.closest('ion-tabs');
        if (tabs) {
            await tabs.componentOnReady();
            await tabs.select(tab);
        }
    }
}
TabDelegate.decorators = [
    { type: Directive, args: [{
                selector: 'ion-tab'
            },] },
];
/** @nocollapse */
TabDelegate.ctorParameters = () => [
    { type: ElementRef, },
    { type: ComponentFactoryResolver, },
    { type: Injector, },
    { type: AngularDelegate, },
];
TabDelegate.propDecorators = {
    "onNavChanged": [{ type: HostListener, args: ['ionNavDidChange',] },],
};
