import { Directive, ElementRef, HostListener } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { setIonicClasses } from './util/set-ionic-classes';
export class SelectValueAccessor {
    constructor(element) {
        this.element = element;
        this.onChange = () => {
            /**/ 
        };
        this.onTouched = () => {
            /**/ 
        };
    }
    writeValue(value) {
        this.element.nativeElement.value = value;
        requestAnimationFrame(() => {
            setIonicClasses(this.element);
        });
    }
    _handleChangeEvent(value) {
        this.onChange(value);
        requestAnimationFrame(() => {
            setIonicClasses(this.element);
        });
    }
    _handleBlurEvent() {
        this.onTouched();
        requestAnimationFrame(() => {
            setIonicClasses(this.element);
        });
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.element.nativeElement.disabled = isDisabled;
    }
}
SelectValueAccessor.decorators = [
    { type: Directive, args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'ion-range, ion-select, ion-radio-group, ion-segment, ion-datetime',
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: SelectValueAccessor,
                        multi: true
                    }
                ]
            },] },
];
/** @nocollapse */
SelectValueAccessor.ctorParameters = () => [
    { type: ElementRef, },
];
SelectValueAccessor.propDecorators = {
    "_handleChangeEvent": [{ type: HostListener, args: ['ionChange', ['$event.target.value'],] },],
    "_handleBlurEvent": [{ type: HostListener, args: ['ionBlur',] },],
};
