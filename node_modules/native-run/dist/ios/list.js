"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Debug = require("debug");
const list_1 = require("../utils/list");
const device_1 = require("./utils/device");
const simulator_1 = require("./utils/simulator");
const debug = Debug('native-run:ios:list');
async function run(args) {
    process.stdout.write(await list(args));
}
exports.run = run;
async function list(args) {
    const devicesPromise = device_1.getConnectedDevices()
        .then(devices => devices.map(deviceToTarget))
        .catch(err => {
        debug('There was an error getting the iOS device list: %O', err);
        return [];
    });
    const simulatorsPromise = simulator_1.getSimulators()
        .then(simulators => simulators.map(simulatorToTarget))
        .catch(err => {
        debug('There was an error getting the iOS simulator list: %O', err);
        return [];
    });
    const [devices, simulators] = await Promise.all([devicesPromise, simulatorsPromise]);
    return list_1.format(args, devices, simulators);
}
exports.list = list;
function deviceToTarget(device) {
    return {
        platform: 'ios',
        name: device.DeviceName,
        model: device.ProductType,
        sdkVersion: device.ProductVersion,
        id: device.UniqueDeviceID,
        format() {
            return `${this.name} ${this.model} ${this.sdkVersion} ${this.id}`;
        },
    };
}
function simulatorToTarget(simulator) {
    return {
        platform: 'ios',
        name: simulator.name,
        sdkVersion: simulator.runtime.version,
        id: simulator.udid,
        format() {
            return `${this.name} ${this.sdkVersion} ${this.id}`;
        },
    };
}
